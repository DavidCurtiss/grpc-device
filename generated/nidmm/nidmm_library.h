//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-DMM
//---------------------------------------------------------------------
#ifndef NIDMM_GRPC_LIBRARY_H
#define NIDMM_GRPC_LIBRARY_H

#include "nidmm_library_interface.h"

#include <server/shared_library.h>

namespace nidmm_grpc {

class NiDMMLibrary : public nidmm_grpc::NiDMMLibraryInterface {
 public:
  NiDMMLibrary();
  virtual ~NiDMMLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViStatus Abort(ViSession vi);
  ViStatus ConfigureMeasurementAbsolute(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionAbsolute);
  ViStatus ConfigureMeasurementDigits(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionDigits);
  ViStatus ConfigureMultiPoint(ViSession vi, ViInt32 triggerCount, ViInt32 sampleCount, ViInt32 sampleTrigger, ViReal64 sampleInterval);
  ViStatus ConfigureRTDCustom(ViSession vi, ViReal64 rtdA, ViReal64 rtdB, ViReal64 rtdC);
  ViStatus ConfigureRTDType(ViSession vi, ViInt32 rtdType, ViReal64 rtdResistance);
  ViStatus ConfigureThermistorCustom(ViSession vi, ViReal64 thermistorA, ViReal64 thermistorB, ViReal64 thermistorC);
  ViStatus ConfigureThermocouple(ViSession vi, ViInt32 thermocoupleType, ViInt32 referenceJunctionType);
  ViStatus ConfigureTrigger(ViSession vi, ViInt32 triggerSource, ViReal64 triggerDelay);
  ViStatus ConfigureWaveformAcquisition(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 rate, ViInt32 waveformPoints);
  ViStatus Disable(ViSession vi);
  ViStatus ExportAttributeConfigurationBuffer(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  ViStatus ExportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus Fetch(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  ViStatus FetchMultiPoint(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  ViStatus FetchWaveform(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean* attributeValue);
  ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32* attributeValue);
  ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64* attributeValue);
  ViStatus GetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 bufferSize, ViChar attributeValue[]);
  ViStatus GetCalDateAndTime(ViSession vi, ViInt32 calType, ViInt32* month, ViInt32* day, ViInt32* year, ViInt32* hour, ViInt32* minute);
  ViStatus GetDevTemp(ViSession vi, ViString options, ViReal64* temperature);
  ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]);
  ViStatus GetExtCalRecommendedInterval(ViSession vi, ViInt32* months);
  ViStatus GetLastCalTemp(ViSession vi, ViInt32 calType, ViReal64* temperature);
  ViStatus GetSelfCalSupported(ViSession vi, ViBoolean* selfCalSupported);
  ViStatus ImportAttributeConfigurationBuffer(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  ViStatus ImportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus InitWithOptions(ViString resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViString optionString, ViSession* vi);
  ViStatus Initiate(ViSession vi);
  ViStatus LockSession(ViSession vi, ViBoolean* callerHasLock);
  ViStatus PerformOpenCableComp(ViSession vi, ViReal64* conductance, ViReal64* susceptance);
  ViStatus PerformShortCableComp(ViSession vi, ViReal64* resistance, ViReal64* reactance);
  ViStatus Read(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  ViStatus ReadMultiPoint(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  ViStatus ReadStatus(ViSession vi, ViInt32* acquisitionBacklog, ViInt16* acquisitionStatus);
  ViStatus ReadWaveform(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  ViStatus ResetWithDefaults(ViSession vi);
  ViStatus SelfCal(ViSession vi);
  ViStatus SendSoftwareTrigger(ViSession vi);
  ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue);
  ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue);
  ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue);
  ViStatus SetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViString attributeValue);
  ViStatus UnlockSession(ViSession vi, ViBoolean* callerHasLock);
  ViStatus close(ViSession vi);
  ViStatus error_message(ViSession vi, ViStatus errorCode, ViChar errorMessage[256]);
  ViStatus reset(ViSession vi);
  ViStatus self_test(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256]);

 private:
  using AbortPtr = ViStatus (*)(ViSession vi);
  using ConfigureMeasurementAbsolutePtr = ViStatus (*)(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionAbsolute);
  using ConfigureMeasurementDigitsPtr = ViStatus (*)(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionDigits);
  using ConfigureMultiPointPtr = ViStatus (*)(ViSession vi, ViInt32 triggerCount, ViInt32 sampleCount, ViInt32 sampleTrigger, ViReal64 sampleInterval);
  using ConfigureRTDCustomPtr = ViStatus (*)(ViSession vi, ViReal64 rtdA, ViReal64 rtdB, ViReal64 rtdC);
  using ConfigureRTDTypePtr = ViStatus (*)(ViSession vi, ViInt32 rtdType, ViReal64 rtdResistance);
  using ConfigureThermistorCustomPtr = ViStatus (*)(ViSession vi, ViReal64 thermistorA, ViReal64 thermistorB, ViReal64 thermistorC);
  using ConfigureThermocouplePtr = ViStatus (*)(ViSession vi, ViInt32 thermocoupleType, ViInt32 referenceJunctionType);
  using ConfigureTriggerPtr = ViStatus (*)(ViSession vi, ViInt32 triggerSource, ViReal64 triggerDelay);
  using ConfigureWaveformAcquisitionPtr = ViStatus (*)(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 rate, ViInt32 waveformPoints);
  using DisablePtr = ViStatus (*)(ViSession vi);
  using ExportAttributeConfigurationBufferPtr = ViStatus (*)(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  using ExportAttributeConfigurationFilePtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using FetchPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  using FetchMultiPointPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  using FetchWaveformPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  using GetAttributeViBooleanPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean* attributeValue);
  using GetAttributeViInt32Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32* attributeValue);
  using GetAttributeViReal64Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64* attributeValue);
  using GetAttributeViStringPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 bufferSize, ViChar attributeValue[]);
  using GetCalDateAndTimePtr = ViStatus (*)(ViSession vi, ViInt32 calType, ViInt32* month, ViInt32* day, ViInt32* year, ViInt32* hour, ViInt32* minute);
  using GetDevTempPtr = ViStatus (*)(ViSession vi, ViString options, ViReal64* temperature);
  using GetErrorPtr = ViStatus (*)(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]);
  using GetExtCalRecommendedIntervalPtr = ViStatus (*)(ViSession vi, ViInt32* months);
  using GetLastCalTempPtr = ViStatus (*)(ViSession vi, ViInt32 calType, ViReal64* temperature);
  using GetSelfCalSupportedPtr = ViStatus (*)(ViSession vi, ViBoolean* selfCalSupported);
  using ImportAttributeConfigurationBufferPtr = ViStatus (*)(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  using ImportAttributeConfigurationFilePtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using InitWithOptionsPtr = ViStatus (*)(ViString resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViString optionString, ViSession* vi);
  using InitiatePtr = ViStatus (*)(ViSession vi);
  using LockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);
  using PerformOpenCableCompPtr = ViStatus (*)(ViSession vi, ViReal64* conductance, ViReal64* susceptance);
  using PerformShortCableCompPtr = ViStatus (*)(ViSession vi, ViReal64* resistance, ViReal64* reactance);
  using ReadPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  using ReadMultiPointPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  using ReadStatusPtr = ViStatus (*)(ViSession vi, ViInt32* acquisitionBacklog, ViInt16* acquisitionStatus);
  using ReadWaveformPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  using ResetWithDefaultsPtr = ViStatus (*)(ViSession vi);
  using SelfCalPtr = ViStatus (*)(ViSession vi);
  using SendSoftwareTriggerPtr = ViStatus (*)(ViSession vi);
  using SetAttributeViBooleanPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue);
  using SetAttributeViInt32Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue);
  using SetAttributeViReal64Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue);
  using SetAttributeViStringPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViString attributeValue);
  using UnlockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);
  using closePtr = ViStatus (*)(ViSession vi);
  using error_messagePtr = ViStatus (*)(ViSession vi, ViStatus errorCode, ViChar errorMessage[256]);
  using resetPtr = ViStatus (*)(ViSession vi);
  using self_testPtr = ViStatus (*)(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256]);

  typedef struct FunctionPointers {
    AbortPtr Abort;
    ConfigureMeasurementAbsolutePtr ConfigureMeasurementAbsolute;
    ConfigureMeasurementDigitsPtr ConfigureMeasurementDigits;
    ConfigureMultiPointPtr ConfigureMultiPoint;
    ConfigureRTDCustomPtr ConfigureRTDCustom;
    ConfigureRTDTypePtr ConfigureRTDType;
    ConfigureThermistorCustomPtr ConfigureThermistorCustom;
    ConfigureThermocouplePtr ConfigureThermocouple;
    ConfigureTriggerPtr ConfigureTrigger;
    ConfigureWaveformAcquisitionPtr ConfigureWaveformAcquisition;
    DisablePtr Disable;
    ExportAttributeConfigurationBufferPtr ExportAttributeConfigurationBuffer;
    ExportAttributeConfigurationFilePtr ExportAttributeConfigurationFile;
    FetchPtr Fetch;
    FetchMultiPointPtr FetchMultiPoint;
    FetchWaveformPtr FetchWaveform;
    GetAttributeViBooleanPtr GetAttributeViBoolean;
    GetAttributeViInt32Ptr GetAttributeViInt32;
    GetAttributeViReal64Ptr GetAttributeViReal64;
    GetAttributeViStringPtr GetAttributeViString;
    GetCalDateAndTimePtr GetCalDateAndTime;
    GetDevTempPtr GetDevTemp;
    GetErrorPtr GetError;
    GetExtCalRecommendedIntervalPtr GetExtCalRecommendedInterval;
    GetLastCalTempPtr GetLastCalTemp;
    GetSelfCalSupportedPtr GetSelfCalSupported;
    ImportAttributeConfigurationBufferPtr ImportAttributeConfigurationBuffer;
    ImportAttributeConfigurationFilePtr ImportAttributeConfigurationFile;
    InitWithOptionsPtr InitWithOptions;
    InitiatePtr Initiate;
    LockSessionPtr LockSession;
    PerformOpenCableCompPtr PerformOpenCableComp;
    PerformShortCableCompPtr PerformShortCableComp;
    ReadPtr Read;
    ReadMultiPointPtr ReadMultiPoint;
    ReadStatusPtr ReadStatus;
    ReadWaveformPtr ReadWaveform;
    ResetWithDefaultsPtr ResetWithDefaults;
    SelfCalPtr SelfCal;
    SendSoftwareTriggerPtr SendSoftwareTrigger;
    SetAttributeViBooleanPtr SetAttributeViBoolean;
    SetAttributeViInt32Ptr SetAttributeViInt32;
    SetAttributeViReal64Ptr SetAttributeViReal64;
    SetAttributeViStringPtr SetAttributeViString;
    UnlockSessionPtr UnlockSession;
    closePtr close;
    error_messagePtr error_message;
    resetPtr reset;
    self_testPtr self_test;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nidmm_grpc

#endif  // NIDMM_GRPC_LIBRARY_H
